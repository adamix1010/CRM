Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a sample Python script.\r\n\r\n\r\n
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -1,3 +1,1 @@
 # This is a sample Python script.
-
-
Index: Leads/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 3.1.4 on 2022-11-29 11:53\r\n\r\nfrom django.conf import settings\r\nimport django.contrib.auth.models\r\nimport django.contrib.auth.validators\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\nimport django.utils.timezone\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n        ('auth', '0012_alter_user_first_name_max_length'),\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Agent',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='User',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('password', models.CharField(max_length=128, verbose_name='password')),\r\n                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),\r\n                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),\r\n                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),\r\n                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),\r\n                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),\r\n                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),\r\n                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),\r\n                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),\r\n                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),\r\n                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),\r\n                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),\r\n            ],\r\n            options={\r\n                'verbose_name': 'user',\r\n                'verbose_name_plural': 'users',\r\n                'abstract': False,\r\n            },\r\n            managers=[\r\n                ('objects', django.contrib.auth.models.UserManager()),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Lead',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('first_name', models.CharField(max_length=30)),\r\n                ('last_name', models.CharField(max_length=30)),\r\n                ('cell_num', models.IntegerField()),\r\n                ('e_mail', models.CharField(max_length=50)),\r\n                ('status', models.CharField(choices=[('Before first contact', 'Before first contact'), ('During process', 'During process'), ('After process', 'After process'), ('Service', 'Service'), ('Rejected', 'Rejected')], default='before first contact', max_length=32)),\r\n                ('addons', models.FileField(upload_to='')),\r\n                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Leads.agent')),\r\n            ],\r\n        ),\r\n        migrations.AddField(\r\n            model_name='agent',\r\n            name='user',\r\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),\r\n        ),\r\n    ]\r\n
===================================================================
diff --git a/Leads/migrations/0001_initial.py b/Leads/migrations/0001_initial.py
--- a/Leads/migrations/0001_initial.py	
+++ b/Leads/migrations/0001_initial.py	
@@ -1,15 +1,13 @@
 # Generated by Django 3.1.4 on 2022-11-29 11:53
 
-from django.conf import settings
 import django.contrib.auth.models
 import django.contrib.auth.validators
-from django.db import migrations, models
-import django.db.models.deletion
 import django.utils.timezone
+from django.conf import settings
+from django.db import migrations, models
 
 
 class Migration(migrations.Migration):
-
     initial = True
 
     dependencies = [
@@ -29,16 +27,31 @@
                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                 ('password', models.CharField(max_length=128, verbose_name='password')),
                 ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
-                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
-                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
+                ('is_superuser', models.BooleanField(default=False,
+                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
+                                                     verbose_name='superuser status')),
+                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
+                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
+                                              max_length=150, unique=True,
+                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
+                                              verbose_name='username')),
                 ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                 ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                 ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
-                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
-                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
+                ('is_staff', models.BooleanField(default=False,
+                                                 help_text='Designates whether the user can log into this admin site.',
+                                                 verbose_name='staff status')),
+                ('is_active', models.BooleanField(default=True,
+                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
+                                                  verbose_name='active')),
                 ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
-                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
-                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
+                ('groups', models.ManyToManyField(blank=True,
+                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
+                                                  related_name='user_set', related_query_name='user', to='auth.Group',
+                                                  verbose_name='groups')),
+                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
+                                                            related_name='user_set', related_query_name='user',
+                                                            to='auth.Permission', verbose_name='user permissions')),
             ],
             options={
                 'verbose_name': 'user',
@@ -57,7 +70,10 @@
                 ('last_name', models.CharField(max_length=30)),
                 ('cell_num', models.IntegerField()),
                 ('e_mail', models.CharField(max_length=50)),
-                ('status', models.CharField(choices=[('Before first contact', 'Before first contact'), ('During process', 'During process'), ('After process', 'After process'), ('Service', 'Service'), ('Rejected', 'Rejected')], default='before first contact', max_length=32)),
+                ('status', models.CharField(
+                    choices=[('Before first contact', 'Before first contact'), ('During process', 'During process'),
+                             ('After process', 'After process'), ('Service', 'Service'), ('Rejected', 'Rejected')],
+                    default='before first contact', max_length=32)),
                 ('addons', models.FileField(upload_to='')),
                 ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Leads.agent')),
             ],
